Sub stock_all()        Dim ws As Worksheet    Dim open_date As Long    Dim close_date As Long        'establish the open date and close date in the first sheet    open_date = "20200102"    close_date = "20201231"        For Each ws In ThisWorkbook.Sheets        'create variables to search for and hold the ticker and stock volume    Dim last_row As Long    Dim current_row As Long    Dim different_ticker As Long    Dim stock_volume As Double    Dim total_stock_volume As Double    Dim cell_value1 As String    Dim cell_value2 As String        'identifies last row in the sheet    last_row = Cells(Rows.Count, 1).End(xlUp).Row        'need this variable to print the unique tickers    different_ticker = 2        'set stock volume to zero
    stock_volume = 0    total_stock_volume = 0    'names columns    ws.Range("I1") = "Ticker"    ws.Range("J1") = "Yearly Change"    ws.Range("K1") = "Percent Change"    ws.Range("L1") = "Total Stock Volume"        'loop through the sheet to find unique tickers and stock volume    For current_row = 2 To last_row            'during the first run, I am comparing A2 vs A3, then A3 vs A4, etc.        cell_value1 = ws.Cells(current_row, 1)        cell_value2 = ws.Cells(current_row + 1, 1)        'compares the two values to see if they are different, "<>" means does not equal        If cell_value1 <> cell_value2 Then                        'retrieve the last ticker value before it switches to the next unique ticker            'print the last ticker to column l            ws.Cells(different_ticker, 9) = cell_value1                        'print total stock volume to column l            ws.Cells(different_ticker, 12) = total_stock_volume + ws.Cells(current_row, 7)                        'reset total_stock_volume to total the next ticker            'if you don't do this, the next stock ticker will add the previous total volume to the current total volume            total_stock_volume = 0                        'add 1 to the different ticker count to print the next value to cell I3, I4, etc.            different_ticker = different_ticker + 1                Else 'if the cells are identical                    'store the next stock volume to be added below            stock_volume = ws.Cells(current_row, 7)            'incrementally add up the stock volume            total_stock_volume = total_stock_volume + stock_volume                'ends this series of If/Else conditionals        End If        Next current_row            'loop through the sheet a second time to find the yearly price and percent change from Jan to Dec    Dim opening_price As Currency    Dim closing_price As Currency    Dim yearly_change As Currency    Dim different_yearly As Long    Dim price_row As Long    Dim percent_change As Double    Dim percent_display As String        'need this variable to print the different yearly changes    different_yearly = 2        'loop through each of the dates    For price_row = 2 To last_row                'check if the date matches the open date        If ws.Cells(price_row, 2) = open_date Then                        'if so, retrieve the open price            opening_price = ws.Cells(price_row, 3)                    'else, check if the date matches the close date        ElseIf ws.Cells(price_row, 2) = close_date Then                    'if so, retrieve the close price            closing_price = ws.Cells(price_row, 6)            ' calculate yearly change            yearly_change = closing_price - opening_price                    'enter yearly change value in column j            ws.Cells(different_yearly, 10) = yearly_change                        'change the color of yearly change to green or red            If yearly_change > 0 Then                ws.Cells(different_yearly, 10).Interior.ColorIndex = 4 'if positive, change to green            Else                ws.Cells(different_yearly, 10).Interior.ColorIndex = 3 'if negative, change to red            End If                        'calculate percent change based off of the value of the yearly change            percent_change = (yearly_change / opening_price) * 100            'display percent change as a percentage            percent_display = Format(percent_change, "0.00") & "%"            'enter percent change value in column k            ws.Cells(different_yearly, 11) = percent_display                        'add 1 to the different yearly count to print the next value in the next cell            different_yearly = different_yearly + 1                    'ends this series of If/Else conditionals        End If            Next price_row    'hard solution calculation    Dim hard_solution_row As Long    Dim greatest_volume_value As Double    Dim greatest_volume_ticker As String    Dim greatest_increase As Double    Dim greatest_increase_ticker As String    Dim percent_display_increase As String    Dim greatest_decrease As Double    Dim greatest_decrease_ticker As String    Dim percent_display_decrease As String        'assign value to zero to compare cell L2 to zero, then L3 to L2, etc.    greatest_volume_value = 0        'start with a low value to make sure it gets replaced    greatest_increase = -100        'start with a high value to make sure it gets replaced    greatest_decrease = 100        'name rows    ws.Range("O2") = "Greatest % Increase"    ws.Range("O3") = "Greatest % Decrease"    ws.Range("O4") = "Greatest Total Volume"        'name columns    ws.Range("P1") = "Ticker"    ws.Range("Q1") = "Value"        'loop through percent change and total stock volume to find the greatest % inc, % dec, and total volume    For hard_solution_row = 2 To last_row            'compares L2 to zero, then L3 to L2, look for the greatest volume        If ws.Cells(hard_solution_row, 12) > greatest_volume_value Then                'assign L2 to greatest volume            greatest_volume_value = ws.Cells(hard_solution_row, 12)                        'identify corresponding ticker for greatest volume            greatest_volume_ticker = ws.Cells(hard_solution_row, 9)                'ends this series of If/Else conditionals        End If                'compares K2 to -100, then K3 to K2, looking for the highest percentage        If ws.Cells(hard_solution_row, 11) > greatest_increase Then                    'assign K2 to greatest increase            greatest_increase = ws.Cells(hard_solution_row, 11)            'identify corresponding ticker for greatest increase            greatest_increase_ticker = ws.Cells(hard_solution_row, 9)                'ends this series of If/Else conditionals        End If                'compares K2 to 100, then K3 to K2, looking for the lowest percentage        If ws.Cells(hard_solution_row, 11) < greatest_decrease Then                    'assign K2 to greatest decease            greatest_decrease = ws.Cells(hard_solution_row, 11)                        'identify corresponding ticker for greatest decrease            greatest_decrease_ticker = ws.Cells(hard_solution_row, 9)                'ends this series of If/Else conditionals        End If    Next hard_solution_row        'convert to greatest % increase and decrease as a percentage    greatest_increase = greatest_increase * 100    greatest_decrease = greatest_decrease * 100        'display as a percentage    percent_display_increase = Format(greatest_increase, "0.00") & "%"    percent_display_decrease = Format(greatest_decrease, "0.00") & "%"        'print values    ws.Range("P2") = greatest_increase_ticker    ws.Range("Q2") = percent_display_increase    ws.Range("P3") = greatest_decrease_ticker    ws.Range("Q3") = percent_display_decrease    ws.Range("P4") = greatest_volume_ticker    ws.Range("Q4") = greatest_volume_value    'increment the year by one for the next sheet    open_date = open_date + 10000    close_date = close_date + 10000    Next ws    End Sub